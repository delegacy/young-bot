buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.2'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE'
        classpath 'com.bmuschko:gradle-docker-plugin:4.9.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE' apply false
    id 'org.sonarqube' version '2.7.1'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply from: "${rootDir}/gradle/scripts/build-flags.gradle"

// Configure all Java projects.
configure(projectsWithFlags('java')) {
    // Common dependencies
    dependencies {
        testCompile 'org.springframework.boot:spring-boot-starter-test'
        // WebTestClient still requires this lib.
        testRuntimeOnly 'org.springframework.boot:spring-boot-starter-reactor-netty'

        testCompile 'org.junit.jupiter:junit-jupiter-api'
        testCompile 'org.junit.jupiter:junit-jupiter-params'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testRuntimeOnly 'org.junit.platform:junit-platform-commons'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        testCompile 'com.linecorp.armeria:armeria-testing-junit'
        testCompile 'io.projectreactor:reactor-test'
    }

    test {
        testLogging {
            // Set options for log level LIFECYCLE
            events 'failed'
            exceptionFormat 'short'

            // Set options for log level DEBUG
            debug {
                events 'started', 'skipped', 'failed'
                exceptionFormat 'full'
            }

            // Remove standard output/error logging from --info builds
            // by assigning only 'failed' and 'skipped' events
            info {
                events = ['failed', 'skipped']
            }
        }

        failFast = true
    }
}
