buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        classpath 'com.bmuschko:gradle-docker-plugin:4.9.0'
        classpath 'io.franzbecker:gradle-lombok:3.0.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.7.RELEASE' apply false
    id 'org.sonarqube' version '2.7.1'
}

repositories {
    mavenCentral()
    jcenter()
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.franzbecker.gradle-lombok'

    repositories {
        mavenCentral()
        jcenter()
    }

    group = 'com.github.delegacy.youngbot'
    version = '0.1.0-SNAPSHOT'
    archivesBaseName = 'young-bot-' + project.name

    sourceCompatibility = 11
    targetCompatibility = 11

    jacoco {
        toolVersion = '0.8.3'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
        }
    }

    test {
        useJUnitPlatform()

        testLogging {
            // Set options for log level LIFECYCLE
            events 'failed'
            exceptionFormat 'short'

            // Set options for log level DEBUG
            debug {
                events 'started', 'skipped', 'failed'
                exceptionFormat 'full'
            }

            // Remove standard output/error logging from --info builds
            // by assigning only 'failed' and 'skipped' events
            info {
                events = ['failed', 'skipped']
            }
        }

        failFast = true

        finalizedBy jacocoTestReport
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:2.1.5.RELEASE'
            mavenBom 'com.linecorp.armeria:armeria-bom:0.86.0'
        }

        dependencies {
            dependency 'javax.annotation:javax.annotation-api:1.3.2'

            // Logging
            dependency 'ch.qos.logback:logback-classic:1.2.3'
            dependency 'org.slf4j:log4j-over-slf4j:1.7.26'
            dependencySet(group:'ch.qos.logback.contrib', version: '0.1.5') {
                entry 'logback-json-classic'
                entry 'logback-jackson'
            }

            // Test
            dependencySet(group:'org.junit.jupiter', version: '5.4.2') {
                entry 'junit-jupiter-api'
                entry 'junit-jupiter-params'
                entry 'junit-jupiter-engine'
            }
            dependencySet(group:'org.junit.platform', version: '1.4.2') {
                entry 'junit-platform-commons'
                entry 'junit-platform-launcher'
            }

            // Slack
            dependency 'com.hubspot.slack:slack-base:1.1'

            // LINE
            dependency 'com.linecorp.bot:line-bot-model:2.6.0'
        }
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // WebTestClient still requires this lib.
        testRuntimeOnly 'org.springframework.boot:spring-boot-starter-reactor-netty'

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testRuntimeOnly 'org.junit.platform:junit-platform-commons'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        testImplementation 'io.projectreactor:reactor-test'
    }
}
