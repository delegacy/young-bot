---
- hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - import_tasks: common_tasks.yml

    - name: Create an AWS Elastic Load Balancer target group
      elb_target_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        name: "{{ server_target_group_name }}"
        vpc_id: "{{ vpc_id }}"
        protocol: http
        port: 80
        health_check_protocol: http
        health_check_path: /actuator/health
        target_type: ip
        targets:
          - Id: "{{ app_ip }}"
            Port: "{{ app_port }}"
        state: present
      register: elb_target_group_result

    - name: Create an AWS Application Elastic Load Balancer
      elb_application_lb:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        name: "lb-{{ server_name }}"
        scheme: internet-facing
        security_groups:
          - "{{ security_group_name }}"
        subnets:
          - "{{ subnet1_id }}"
          - "{{ subnet2_id }}"
        listeners:
          - Protocol: HTTPS
            Port: 443
            DefaultActions:
              - Type: forward
                TargetGroupName: "{{ server_target_group_name }}"
            Certificates:
              - CertificateArn: 'arn:aws:acm:ap-northeast-2:601390769788:certificate/44d194cc-3ad0-4e48-be0b-1e9e8fe49b6a'
            SslPolicy: ELBSecurityPolicy-2016-08
            Rules:
              - Conditions:
                  - Field: path-pattern
                    Values:
                      - '/*'
                Priority: 1
                Actions:
                  - Type: forward
                    TargetGroupName: "{{ server_target_group_name }}"
        state: present
      register: elb_application_lb_result
